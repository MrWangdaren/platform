<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtk.platform.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.dtk.platform.bean.Users">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="Vip_SN" jdbcType="VARCHAR" property="vipSn" />
    <result column="Vip_Name" jdbcType="VARCHAR" property="vipName" />
    <result column="Vip_Contact" jdbcType="VARCHAR" property="vipContact" />
    <result column="Vip_Header_Icon" jdbcType="VARCHAR" property="vipHeaderIcon" />
    <result column="Vip_Gender" jdbcType="INTEGER" property="vipGender" />
    <result column="Vip_Password" jdbcType="VARCHAR" property="vipPassword" />
    <result column="OpeneId" jdbcType="VARCHAR" property="openeid" />
    <result column="UnionUniqueId" jdbcType="VARCHAR" property="unionuniqueid" />
    <result column="TPLUserId" jdbcType="VARCHAR" property="tpluserid" />
    <result column="Token" jdbcType="VARCHAR" property="token" />
    <result column="Vip_Level" jdbcType="INTEGER" property="vipLevel" />
    <result column="Vip_State" jdbcType="INTEGER" property="vipState" />
    <result column="State" jdbcType="INTEGER" property="state" />
    <result column="Create_Time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="Operate_Time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="Keep_Field" jdbcType="VARCHAR" property="keepField" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, Vip_SN, Vip_Name, Vip_Contact, Vip_Header_Icon, Vip_Gender, Vip_Password, OpeneId, 
    UnionUniqueId, TPLUserId, Token, Vip_Level, Vip_State, State, Create_Time, Operate_Time, 
    Keep_Field
  </sql>
  <select id="selectByExample" parameterType="com.dtk.platform.bean.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dtk.platform.bean.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dtk.platform.bean.Users">
    insert into users (ID, Vip_SN, Vip_Name, 
      Vip_Contact, Vip_Header_Icon, Vip_Gender, 
      Vip_Password, OpeneId, UnionUniqueId, 
      TPLUserId, Token, Vip_Level, 
      Vip_State, State, Create_Time, 
      Operate_Time, Keep_Field)
    values (#{id,jdbcType=INTEGER}, #{vipSn,jdbcType=VARCHAR}, #{vipName,jdbcType=VARCHAR}, 
      #{vipContact,jdbcType=VARCHAR}, #{vipHeaderIcon,jdbcType=VARCHAR}, #{vipGender,jdbcType=INTEGER}, 
      #{vipPassword,jdbcType=VARCHAR}, #{openeid,jdbcType=VARCHAR}, #{unionuniqueid,jdbcType=VARCHAR}, 
      #{tpluserid,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{vipLevel,jdbcType=INTEGER}, 
      #{vipState,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{operateTime,jdbcType=TIMESTAMP}, #{keepField,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dtk.platform.bean.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="vipSn != null">
        Vip_SN,
      </if>
      <if test="vipName != null">
        Vip_Name,
      </if>
      <if test="vipContact != null">
        Vip_Contact,
      </if>
      <if test="vipHeaderIcon != null">
        Vip_Header_Icon,
      </if>
      <if test="vipGender != null">
        Vip_Gender,
      </if>
      <if test="vipPassword != null">
        Vip_Password,
      </if>
      <if test="openeid != null">
        OpeneId,
      </if>
      <if test="unionuniqueid != null">
        UnionUniqueId,
      </if>
      <if test="tpluserid != null">
        TPLUserId,
      </if>
      <if test="token != null">
        Token,
      </if>
      <if test="vipLevel != null">
        Vip_Level,
      </if>
      <if test="vipState != null">
        Vip_State,
      </if>
      <if test="state != null">
        State,
      </if>
      <if test="createTime != null">
        Create_Time,
      </if>
      <if test="operateTime != null">
        Operate_Time,
      </if>
      <if test="keepField != null">
        Keep_Field,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="vipSn != null">
        #{vipSn,jdbcType=VARCHAR},
      </if>
      <if test="vipName != null">
        #{vipName,jdbcType=VARCHAR},
      </if>
      <if test="vipContact != null">
        #{vipContact,jdbcType=VARCHAR},
      </if>
      <if test="vipHeaderIcon != null">
        #{vipHeaderIcon,jdbcType=VARCHAR},
      </if>
      <if test="vipGender != null">
        #{vipGender,jdbcType=INTEGER},
      </if>
      <if test="vipPassword != null">
        #{vipPassword,jdbcType=VARCHAR},
      </if>
      <if test="openeid != null">
        #{openeid,jdbcType=VARCHAR},
      </if>
      <if test="unionuniqueid != null">
        #{unionuniqueid,jdbcType=VARCHAR},
      </if>
      <if test="tpluserid != null">
        #{tpluserid,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="vipLevel != null">
        #{vipLevel,jdbcType=INTEGER},
      </if>
      <if test="vipState != null">
        #{vipState,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="keepField != null">
        #{keepField,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dtk.platform.bean.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.vipSn != null">
        Vip_SN = #{record.vipSn,jdbcType=VARCHAR},
      </if>
      <if test="record.vipName != null">
        Vip_Name = #{record.vipName,jdbcType=VARCHAR},
      </if>
      <if test="record.vipContact != null">
        Vip_Contact = #{record.vipContact,jdbcType=VARCHAR},
      </if>
      <if test="record.vipHeaderIcon != null">
        Vip_Header_Icon = #{record.vipHeaderIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.vipGender != null">
        Vip_Gender = #{record.vipGender,jdbcType=INTEGER},
      </if>
      <if test="record.vipPassword != null">
        Vip_Password = #{record.vipPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.openeid != null">
        OpeneId = #{record.openeid,jdbcType=VARCHAR},
      </if>
      <if test="record.unionuniqueid != null">
        UnionUniqueId = #{record.unionuniqueid,jdbcType=VARCHAR},
      </if>
      <if test="record.tpluserid != null">
        TPLUserId = #{record.tpluserid,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        Token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.vipLevel != null">
        Vip_Level = #{record.vipLevel,jdbcType=INTEGER},
      </if>
      <if test="record.vipState != null">
        Vip_State = #{record.vipState,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        State = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        Create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operateTime != null">
        Operate_Time = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.keepField != null">
        Keep_Field = #{record.keepField,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set ID = #{record.id,jdbcType=INTEGER},
      Vip_SN = #{record.vipSn,jdbcType=VARCHAR},
      Vip_Name = #{record.vipName,jdbcType=VARCHAR},
      Vip_Contact = #{record.vipContact,jdbcType=VARCHAR},
      Vip_Header_Icon = #{record.vipHeaderIcon,jdbcType=VARCHAR},
      Vip_Gender = #{record.vipGender,jdbcType=INTEGER},
      Vip_Password = #{record.vipPassword,jdbcType=VARCHAR},
      OpeneId = #{record.openeid,jdbcType=VARCHAR},
      UnionUniqueId = #{record.unionuniqueid,jdbcType=VARCHAR},
      TPLUserId = #{record.tpluserid,jdbcType=VARCHAR},
      Token = #{record.token,jdbcType=VARCHAR},
      Vip_Level = #{record.vipLevel,jdbcType=INTEGER},
      Vip_State = #{record.vipState,jdbcType=INTEGER},
      State = #{record.state,jdbcType=INTEGER},
      Create_Time = #{record.createTime,jdbcType=TIMESTAMP},
      Operate_Time = #{record.operateTime,jdbcType=TIMESTAMP},
      Keep_Field = #{record.keepField,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dtk.platform.bean.Users">
    update users
    <set>
      <if test="vipSn != null">
        Vip_SN = #{vipSn,jdbcType=VARCHAR},
      </if>
      <if test="vipName != null">
        Vip_Name = #{vipName,jdbcType=VARCHAR},
      </if>
      <if test="vipContact != null">
        Vip_Contact = #{vipContact,jdbcType=VARCHAR},
      </if>
      <if test="vipHeaderIcon != null">
        Vip_Header_Icon = #{vipHeaderIcon,jdbcType=VARCHAR},
      </if>
      <if test="vipGender != null">
        Vip_Gender = #{vipGender,jdbcType=INTEGER},
      </if>
      <if test="vipPassword != null">
        Vip_Password = #{vipPassword,jdbcType=VARCHAR},
      </if>
      <if test="openeid != null">
        OpeneId = #{openeid,jdbcType=VARCHAR},
      </if>
      <if test="unionuniqueid != null">
        UnionUniqueId = #{unionuniqueid,jdbcType=VARCHAR},
      </if>
      <if test="tpluserid != null">
        TPLUserId = #{tpluserid,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        Token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="vipLevel != null">
        Vip_Level = #{vipLevel,jdbcType=INTEGER},
      </if>
      <if test="vipState != null">
        Vip_State = #{vipState,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        State = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        Create_Time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateTime != null">
        Operate_Time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="keepField != null">
        Keep_Field = #{keepField,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dtk.platform.bean.Users">
    update users
    set Vip_SN = #{vipSn,jdbcType=VARCHAR},
      Vip_Name = #{vipName,jdbcType=VARCHAR},
      Vip_Contact = #{vipContact,jdbcType=VARCHAR},
      Vip_Header_Icon = #{vipHeaderIcon,jdbcType=VARCHAR},
      Vip_Gender = #{vipGender,jdbcType=INTEGER},
      Vip_Password = #{vipPassword,jdbcType=VARCHAR},
      OpeneId = #{openeid,jdbcType=VARCHAR},
      UnionUniqueId = #{unionuniqueid,jdbcType=VARCHAR},
      TPLUserId = #{tpluserid,jdbcType=VARCHAR},
      Token = #{token,jdbcType=VARCHAR},
      Vip_Level = #{vipLevel,jdbcType=INTEGER},
      Vip_State = #{vipState,jdbcType=INTEGER},
      State = #{state,jdbcType=INTEGER},
      Create_Time = #{createTime,jdbcType=TIMESTAMP},
      Operate_Time = #{operateTime,jdbcType=TIMESTAMP},
      Keep_Field = #{keepField,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>